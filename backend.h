void initPlayer(player_t * player);
void playerMove(int dire, player_t * player);
void playerShoot(bullet_t *playerBullet, player_t *player, bool *tryShoot);
void initAliensBlock(alienBlock_t * aliensBlock);
void initAliensArray(alien_t aliens[ALIEN_ROWS][ALIEN_COLS]);
void updateAliensBlock(alien_t aliens[ALIEN_ROWS][ALIEN_COLS], alienBlock_t * aliensBlock);
void blockMove(alien_t aliens[ALIEN_ROWS][ALIEN_COLS], alienBlock_t * aliensBlock);
void initShieldsArray(shield_t shields[NUM_SHIELDS]);
char rectangleOverlap(uint16_t AX, uint16_t AW, uint16_t BX, uint16_t BW, uint16_t AY, uint16_t AH, uint16_t BY, uint16_t BH);
//void collisionDetect(bullet_t * bulletP, bullet_t * bulletA, alien_t * aliens[ALIEN_ROWS][ALIEN_COLS], ovni_t * ovni, shield_t * shields[NUM_SHIELDS], alienBlock_t * aliensBlock, player_t * player, stats_t * gameStats, uint8_t printedRow);
void collisionBA(bullet_t * bullet, alien_t aliens[ALIEN_ROWS][ALIEN_COLS], alienBlock_t * aliensBlock, stats_t * gameStats, int printedRow);
void collisionBB(bullet_t * bulletP , bullet_t * bulletA);
//void collisionAS (alien_t * aliens[ALIEN_ROWS][ALIEN_COLS], shield_t * shields[NUM_SHIELDS], alienBlock_t * aliensBlock);
void collisionBP (bullet_t * bullet, player_t * player);
//void collisionAP (player_t * player, alien_t * aliens[ALIEN_ROWS][ALIEN_COLS], alienBlock_t * aliensBlock);
//void collisionBO (bullet_t * bullet, ovni_t * ovni, player_t * player, stats_t * gameStats);
void initGameStats(stats_t * gameStats);
